Merge Intervals

Given a collection of intervals, merge all overlapping intervals.

For example,
Given [1,3],[2,6],[8,10],[15,18],
return [1,6],[8,10],[15,18].


/**
 * Definition for an interval.
 * struct Interval {
 *     int start;
 *     int end;
 *     Interval() : start(0), end(0) {}
 *     Interval(int s, int e) : start(s), end(e) {}
 * };
 */
class Solution {
public:
    static int comp(Interval l,Interval r)
    {
        return l.start < r.start;
    }

    vector<Interval> merge(vector<Interval>& intervals) {
        sort(intervals.begin(), intervals.end(), comp );
        vector<Interval> ret;
        
        if(intervals.size() == 0)
            return ret;
        
        Interval lastInterval = intervals[0];
        for(int i = 0; i < intervals.size(); ++i)
        {
            Interval cur = intervals[i];
            if(cur.start <= lastInterval.end)
            {
                lastInterval.end = cur.end > lastInterval.end? cur.end : lastInterval.end;
            }
            else
            {
                ret.push_back(lastInterval);
                lastInterval = cur;
            }
        }
        
        ret.push_back(lastInterval);
        
        return ret;
        
    }
};

//solution, sort the vector and check start/end of the interval, to determin whether or not push_back to the ret