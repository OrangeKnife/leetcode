Delete Node in a Linked List 

Write a function to delete a node (except the tail) in a singly linked list, given only access to that node.

Supposed the linked list is 1 -> 2 -> 3 -> 4 and you are given the third node with value 3, the linked list should become 1 -> 2 -> 4 after calling your function.


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    void deleteNode(ListNode* node) {
        //just move the values from other node to the deleted node
        ListNode* last;
        
        while(node->next)
        {
            node->val = node->next->val;
            last = node;
            node = node->next;
        }
        
        last->next = NULL; // you have to set the second last node points to NULL (which is the last node )
    }
};

//solution: commented