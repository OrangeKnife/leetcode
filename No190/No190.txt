Reverse Bits

Reverse bits of a given 32 bits unsigned integer.

For example, given input 43261596 (represented in binary as 00000010100101000001111010011100), return 964176192 (represented in binary as 00111001011110000010100101000000).

Follow up:
If this function is called many times, how would you optimize it?

Related problem: Reverse Integer

class Solution {
public:
    uint32_t reverseBits(uint32_t n) {
        uint32_t ret = 0;
        for(int i = 0; i < 16; ++i)
        {
            uint32_t left = n<<i>>31<<i;
            uint32_t right = n>>i<<31>>i;
            
            ret |= left | right;
        }
        
        return ret;
    }
};

//solution: use '|' operator to get every bits from n (you have to do >> << to re-order the bits)