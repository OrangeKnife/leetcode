Path Sum 

Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.

For example:
Given the below binary tree and sum = 22,
              5
             / \
            4   8
           /   / \
          11  13  4
         /  \      \
        7    2      1

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool hasPathSum(TreeNode* root, int sum) {
        if(!root)
        {
            return false;
        }
        
        
        return getSum(root, 0 ,sum);
    }
    
    bool getSum(TreeNode* node, int currentSum, int sum)
    {
        bool ret = false;
        
        if(!node->left && !node->right)
            return currentSum + node->val == sum;
        
        if(node->left)
            ret |= getSum(node->left, currentSum + node->val, sum);
        
        if(ret)
            return ret;
        
        if(node->right)
            ret |= getSum(node->right, currentSum + node->val, sum);
        
        return ret;
        
    }
};

//solution: count the path sum, compare, return boolean, if false, check next path, if true, return true